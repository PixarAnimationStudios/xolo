D3 v 4 Server Routes/endpoints

All routes start with https://server.org/api/v1
All data is JSON

NOTE: The list-routes only provide full summary lists.

The clients use those lists to offer filtered versions of the full lists, like
.all_ids, and .all_with_status(status)

This way, the server isn't doing processing that would better be distrubuted to the clients. (the server itself only refreshes its cached versions of those lists when
changes are made to the database)

The data offered in the full summary are primarily geared towards the most frequent d3 task:  `d3 sync` and secondly towards other d3cli and d3admin list-based tasks

=== D3 routes

these routes are used by d3 client tools d3 and d3admin and append 'd3' to the base url

so: https://server.org/api/v1/d3

Titles ----

/titles
GET
  - retrieve an Array of Hashes with summary data for each title
  - BODY: the JSON array

/titles/<name>
GET
  - retrieve a title
  - BODY: the JSON data for instantiating a D3::Title
POST
  - create a new title
  - BODY: the JSON data for instantiating a D3::Title to be created on the server
PUT
  - update a title
  - BODY: the JSON data for instantiating a D3::Title to be updated on the server
DELETE
  - delete a title and all associated versions
  - BODY: none

Versions ----

/versions
GET
  - retrieve an Array of Hashes with summary data for each version
  - BODY: the JSON array
  - Note: this is the only version-related route that isn't under 'titles/'

/titles/<name>/version/<vers>
GET
  - retrieve a version in a title
  - BODY: the JSON data for instantiating a D3::Version on the client
POST
  - create a new version in a title
  - BODY: the JSON data for instantiating a D3::Version to be created on the server
PUT
  - update a version in a title
  - BODY: the JSON data for instantiating a D3::Version to be updated on the server
DELETE
  - delete a version in a title and all associated packages, scripts etc
  - BODY: none

Packages ----

/packages
GET
  - retrieve list of JSS packages
  - BODY: the same as JSS::Package.all

Scripts ----

/scripts
GET
  - retrieve list of JSS scripts
  - BODY: the same as JSS::Script.all

Policies (for self service) ----


=== Jamf Patch Source routes

these routes are used by d3 client tools d3 and d3admin and append 'patchsource' to the base url

so: https://server.org/api/v1/patchsource

The endpoints are defined at:

   https://www.jamf.com/jamf-nation/articles/497/jamf-pro-external-patch-source-endpoints
