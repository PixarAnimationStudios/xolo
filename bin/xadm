#!/usr/local/pixar/bin/ruby
#
# !/usr/bin/env ruby

# Copyright 2024 Pixar
#
#    Licensed under the Apache License, Version 2.0 (the "Apache License")
#    with the following modification; you may not use this file except in
#    compliance with the Apache License and the following modification to it:
#    Section 6. Trademarks. is deleted and replaced with:
#
#    6. Trademarks. This License does not grant permission to use the trade
#       names, trademarks, service marks, or product names of the Licensor
#       and its affiliates, except as required to comply with Section 4(c) of
#       the License and to reproduce the content of the NOTICE file.
#
#    You may obtain a copy of the Apache License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the Apache License with the above modification is
#    distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#    KIND, either express or implied. See the Apache License for the specific
#    language governing permissions and limitations under the Apache License.
#

# frozen_string_literal: true

require 'xolo/admin'

# The App
#####################
class XoloAdmin

  # Mixins
  #####################################
  #####################################

  include Xolo::Admin
  include Xolo::Core::JSONWrappers
  include Xolo::Core::Output
  include Xolo::Admin::CommandLine
  include Xolo::Admin::Connection
  include Xolo::Admin::Processing
  include Xolo::Admin::Credentials
  include Xolo::Admin::Interactive
  include Xolo::Admin::Options
  include Xolo::Admin::Validate
  include Xolo::Admin::JamfPro
  include Xolo::Admin::TitleEditor
  include Xolo::Admin::ProgressHistory

  # Constructor
  ###################
  def initialize
    # all bets are off during early testing
    return if ARGV.include? '--test'

    # This will log us in to the xolo server
    # if the command needs it.
    parse_cli
  end

  # Run
  ########################
  def run
    # during early testing - this will return all kinds of things.
    if ARGV.include? '--test'
      run_test_route
      return
    end

    # this line will actuall stay somewhere here in xadm!
    do_walkthru if walkthru?
    return if @walkthru_cancelled

    process_method = cmd_details[:process_method]
    return unless process_method

    send process_method

    ###################
    # puts
    # puts '-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+'
    # puts 'GLOBAL OPTS:'
    # puts '----'
    # global_opts.to_h.each do |k, v|
    #   puts "..#{k} => #{v}"
    # end

    ###################
    # puts
    # puts "COMMAND: #{cli_cmd.command}"

    ###################
    # puts
    # puts "TITLE: #{cli_cmd.title}"

    ###################
    # puts
    # puts "VERSION: #{cli_cmd.version}"

    ###################
    # puts
    # puts 'CURRENT OPT VALUES:'
    # puts 'The values the object had before xadm started working on it.'
    # puts 'If the object is being added, these are the default or inherited values'
    # puts '----'
    # current_opt_values.to_h.each do |k, v|
    #   puts "..#{k} => #{v}"
    # end

    ###################
    # puts
    # puts 'COMMAND OPT VALUES:'
    # puts 'The command options collected by xadm, merged with the'
    # puts 'current values, to be applied to the object'
    # puts '----'
    # opts = walkthru? ? walkthru_cmd_opts : cli_cmd_opts
    # opts.to_h.each do |k, v|
    #   puts "..#{k} => #{v}"
    # end

    ###################
    # puts 'CookieJar:'
    # puts "  Session: #{Xolo::Admin::CookieJar.session_cookie}"
    # puts "  Expires: #{Xolo::Admin::CookieJar.session_expires}"

    ###################
    # puts 'getting /state'
    # resp = server_cnx.get '/state'
    # puts "#{resp.body}"

    # ###################
    # puts 'Listing currently known titles:'
    # all_titles = Xolo::Admin::Title.all_titles server_cnx
    # puts all_titles

    # # ###############
    # already_there = all_titles.include? cli_cmd.title
    # puts "all titles contains our title: #{already_there}"
    # if already_there
    #   puts 'deleting the title first'
    #   resp = Xolo::Admin::Title.delete cli_cmd.title, server_cnx
    #   puts "Delete Status: #{resp.status}"
    #   puts 'Delete Body:'
    #   puts resp.body
    # end

    # # ###################
    # process_method = Xolo::Admin::Options::COMMANDS[cli_cmd.command][:process_method]
    # puts
    # puts "Processing command opts using method: #{process_method}"
    # resp = send process_method if process_method
    # puts "Add Status: #{resp.status}"
    # puts 'Add Body:'
    # puts resp.body
    # puts

    # ##################
    # puts 're-fetching...'
    # title = Xolo::Admin::Title.fetch cli_cmd.title, server_cnx
    # puts "title class: #{title.class}"
    # puts 'title to_h:'
    # puts title.to_h
    # puts

    # ##################
    # puts 'updating...'
    # title.self_service = false
    # resp = title.update server_cnx
    # puts "Update Status: #{resp.status}"
    # puts 'Update Body:'
    # puts resp.body
    # puts

    ###################
    # puts 'running jamf_package_names'
    # puts jamf_package_names

    ###################
    # puts 'running ted_titles'
    # puts ted_titles

    ##################
    # puts
    # puts 'DONE'
  end # run

end # class XoloAdmin

# MAIN
#####################
begin
  # if --debug is given anywhere, move it to the front of ARGV
  # which is where Optimist expects it
  #
  # -d must be given as a global opt (before the command)
  # in order to mean --debug
  #
  db = ARGV.delete '--debug'
  ARGV.unshift db if db

  app = XoloAdmin.new
  debug = app.global_opts.debug

  app.run
rescue => e
  # to
  warn "Error: #{e.class}: #{e}"
  e.backtrace.each { |l| warn "..#{l}" }
end
