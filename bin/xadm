#!/usr/bin/env ruby

# Copyright 2022 Pixar
#
#    Licensed under the Apache License, Version 2.0 (the "Apache License")
#    with the following modification; you may not use this file except in
#    compliance with the Apache License and the following modification to it:
#    Section 6. Trademarks. is deleted and replaced with:
#
#    6. Trademarks. This License does not grant permission to use the trade
#       names, trademarks, service marks, or product names of the Licensor
#       and its affiliates, except as required to comply with Section 4(c) of
#       the License and to reproduce the content of the NOTICE file.
#
#    You may obtain a copy of the Apache License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the Apache License with the above modification is
#    distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#    KIND, either express or implied. See the Apache License for the specific
#    language governing permissions and limitations under the Apache License.
#

# frozen_string_literal: true

require 'xolo'

# The App
#####################
class XoloAdmin

  def initialize
    Xolo::Admin.executable = __FILE__
    Xolo::Admin::CommandLine.parse_cli
  end

  def run
    Xolo::Admin::Interactive.walkthru if Xolo::Admin::Options.global_opts.walkthru

    puts
    puts '-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+'
    puts 'GLOBAL OPTS:'
    Xolo::Admin::Options.global_opts.to_h.each do |k, v|
      puts "..#{k} => #{v}"
    end

    puts
    puts "COMMAND: #{Xolo::Admin::Options.command}"

    puts
    puts "TITLE: #{Xolo::Admin::Options.cmd_args.title}"

    puts
    puts "VERSION: #{Xolo::Admin::Options.cmd_args.version}"

    puts
    puts 'COMMAND OPTS:'
    Xolo::Admin::Options.cmd_opts.to_h.each do |k, v|
      puts "..#{k} => #{v}"
    end
  end # run

end # class XoloAdmin

# MAIN
#####################
begin
  debug = ARGV.include? '--debug'
  app = XoloAdmin.new
  app.run
rescue => e
  warn "ERROR: #{e}"
  e.backtrace.each { |l| warn "..#{l}" } if debug
end
