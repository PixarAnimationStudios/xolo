#!/usr/local/pixar/bin/ruby
#
# !/usr/bin/env ruby

# Copyright 2023 Pixar
#
#    Licensed under the Apache License, Version 2.0 (the "Apache License")
#    with the following modification; you may not use this file except in
#    compliance with the Apache License and the following modification to it:
#    Section 6. Trademarks. is deleted and replaced with:
#
#    6. Trademarks. This License does not grant permission to use the trade
#       names, trademarks, service marks, or product names of the Licensor
#       and its affiliates, except as required to comply with Section 4(c) of
#       the License and to reproduce the content of the NOTICE file.
#
#    You may obtain a copy of the Apache License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the Apache License with the above modification is
#    distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#    KIND, either express or implied. See the Apache License for the specific
#    language governing permissions and limitations under the Apache License.
#

# frozen_string_literal: true

require 'xolo/admin'

# The App
#####################
class XoloAdmin

  # Mixins
  #####################################
  #####################################

  include Xolo::Admin
  include Xolo::Admin::CommandLine
  include Xolo::Admin::Connection
  include Xolo::Admin::Processing
  include Xolo::Admin::Credentials
  include Xolo::Admin::Interactive
  include Xolo::Admin::Options
  include Xolo::Admin::Validate
  include Xolo::Core::JSONWrappers
  include Xolo::Core::YAMLWrappers

  # Constructor
  ###################
  def initialize
    parse_cli
  end

  # Run
  ########################
  def run
    do_walkthru if walkthru?

    puts
    puts '-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+'
    puts 'GLOBAL OPTS:'
    puts '----'
    global_opts.to_h.each do |k, v|
      puts "..#{k} => #{v}"
    end

    puts
    puts "COMMAND: #{cli_cmd.command}"

    puts
    puts "TITLE: #{cli_cmd.title}"

    puts
    puts "VERSION: #{cli_cmd.version}"

    puts
    puts 'CURRENT OPT VALUES:'
    puts 'The values the object had before xadm started working on it.'
    puts 'If the object is being added, these are the default or inherited values'
    puts '----'
    current_opt_values.to_h.each do |k, v|
      puts "..#{k} => #{v}"
    end

    puts
    puts 'COMMAND OPT VALUES:'
    puts 'The command options collected by xadm, merged with the'
    puts 'current values, to be applied to the object'
    puts '----'
    opts = walkthru? ? walkthru_cmd_opts : cli_cmd_opts
    opts.to_h.each do |k, v|
      puts "..#{k} => #{v}"
    end

    process_method = Xolo::Admin::Options::COMMANDS[cli_cmd.command][:process_method]
    puts
    puts "Processing command opts using method: #{process_method}"
    send process_method

    puts 'DONE'
  end # run

  ################
  def executable
    @executable ||= Pathname.new(__FILE__)
  end

end # class XoloAdmin

# MAIN
#####################
begin
  # if --debug is given anywhere, move it to the front of ARGV
  # which is where Optimist expects it
  #
  # -d must be given as a global opt (before the command)
  # in order to mean --debug
  #
  db = ARGV.delete '--debug'
  ARGV.unshift db if db

  app = XoloAdmin.new
  debug = app.global_opts.debug

  app.run
rescue => e
  warn "Error: #{e.class.name.split('::').last}: #{e}"
  e.backtrace.each { |l| warn "..#{l}" }
end
