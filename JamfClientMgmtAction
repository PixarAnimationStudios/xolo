### Copyright 2018 Pixar

###
###    Licensed under the Apache License, Version 2.0 (the "Apache License")
###    with the following modification; you may not use this file except in
###    compliance with the Apache License and the following modification to it:
###    Section 6. Trademarks. is deleted and replaced with:
###
###    6. Trademarks. This License does not grant permission to use the trade
###       names, trademarks, service marks, or product names of the Licensor
###       and its affiliates, except as required to comply with Section 4(c) of
###       the License and to reproduce the content of the NOTICE file.
###
###    You may obtain a copy of the Apache License at
###
###        http://www.apache.org/licenses/LICENSE-2.0
###
###    Unless required by applicable law or agreed to in writing, software
###    distributed under the Apache License with the above modification is
###    distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
###    KIND, either express or implied. See the Apache License for the specific
###    language governing permissions and limitations under the Apache License.
###
###

##


    # TODO move this to JSS::Client
    JAMF_APP_SUPPORT_DIR = Pathname.new '/Library/Application Support/JAMF'
    JAMF_APP_SUPPORT_BIN_DIR = JAMF_APP_SUPPORT_DIR + 'bin'

    # The Pathname to the Management Action executable
    MGMT_ACTION = JAMF_APP_SUPPORT_BIN_DIR + 'Management Action.app/Contents/MacOS/Management Action'

    def management_action(msg, title: nil, subtitle: nil, delay: 0, user: nil )
      raise JSS::InvalidDataError, 'delay: must be a non-negative integer.' unless delay.is_a?(Integer) && delay > -1
      cmd = Shellwords.escape MGMT_ACTION.to_s
      cmd << " -message #{Shellwords.escape msg.to_s}"
      cmd << " -title #{Shellwords.escape title.to_s}" if title
      cmd << " -subtitle #{Shellwords.escape subtitle.to_s}" if subtitle
      cmd << " -deliverydelay #{Shellwords.escape delay}" if delay > 0
      `#{cmd} 2>&1`
    end

  end # class Client

  def self.console_user
    output = `echo 'show State:/Users/ConsoleUser' | /usr/sbin/scutil`
    userline = output.lines.select{|l| l =~ /^\s+Name\s*:/}.first
    return nil unless userline
    userline.to_s.split(/\s*:\s*/).last.chomp
  end


  def self.self_service_user
    psout = `ps -A -o user,comm`.lines
    ss_users = psout.select { |l| l.include? '/Self Service.app/Contents/MacOS/Self Service' }.map { |ssl| ssl.split(/\s/).first }
    cons_user = console_user
    ss_users.include?(cons_user) ? cons_user : nil
  end



# To set noficitaions to alerts (need dismissal) vs banners (vanish in a few secs)
# must run as user

#####
desired_flag = 4432
domain = 'com.apple.ncprefs'
bundle_id = "com.jamfsoftware.Management-Action"

user = 'chrisltest'
plist =  "/Users/#{user}/Library/Preferences/#{domain}.plist"

prefs = JSS.parse_plist(plist)
mgmt_action_setting = prefs['apps'].select{|a| a['bundle-id'] == 'com.jamfsoftware.Management-Action' }.first
mgmt_action_setting['flags'] = desired_flag
system "defaults write #{domain} '#{prefs.to_plist}'"

prefs = JSS.parse_plist(plist)
mgmt_action_setting = prefs['apps'].select{|a| a['bundle-id'] == 'com.jamfsoftware.Management-Action' }.first

if mgmt_action_setting
  mgmt_action_setting['flags'] = desired_flag
else
  prefs['apps'] << {"bundle-id"=>bundle_id, "flags"=>desired_flag, "path"=>"/Library/Application Support/JAMF/bin/Management Action.app"}
end
system "defaults write #{domain} '#{prefs.to_plist}'"
system "defaults read #{domain}"

system 'killall sighup usernoted NotificationCenter'


idx = applist.index {|a| a['bundle-id'] == bundle_id }
system "PlistBuddy -c 'delete :apps:#{idx}' '#{plist}'"   if idx
system "PlistBuddy -c 'Add :apps:0 dict' '#{plist}'"
system "PlistBuddy -c 'Add :apps:0:bundle-id string #{bundle_id}' '#{plist}'"
system "PlistBuddy -c 'Add :apps:0:flags integer #{desired_flag}' '#{plist}'"
system 'killall sighup usernoted NotificationCenter'




system "defaults write #{domain} '#{prefs.to_plist}'"

system 'killall sighup NotificationCenter usernoted'
